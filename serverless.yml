service: aws-log-notifier

provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: ap-northeast-1
  deploymentBucket: serverless-upload-ap-northeast-1
  versionFunctions: false
  iamRoleStatements:
    - Effect: Allow
      Action: [lambda:GetFunction]
      Resource:
        - Fn::Join: [ ":", ["arn:aws:lambda", { Ref: AWS::Region }, { Ref: AWS::AccountId }, "function", "${self:service}-dev-appender"]]
    - Effect: Allow
      Action: [lambda:AddPermission, lambda:RemovePermission, lambda:GetPolicy]
      Resource:
        - Fn::Join: [ ":", ["arn:aws:lambda", { Ref: AWS::Region }, { Ref: AWS::AccountId }, "function", "${self:service}-dev-main"]]
        - Fn::Join: [ ":", ["arn:aws:lambda", { Ref: AWS::Region }, { Ref: AWS::AccountId }, "function", "${self:service}-dev-main2"]]
    - Effect: Allow
      Action: [logs:PutSubscriptionFilter]
      Resource:
        Fn::Join: [ ":", ["arn:aws:logs", { Ref: AWS::Region }, { Ref: AWS::AccountId }, "log-group", "*", "*"]]
  environment:
    SKIP_LOG_GROUP: "netatmo2lametric,aws-log-notifier-dev-main,codedeploy-agent,aws-status-notifier,codedeploy-updater"

functions:
  main:
    handler: handler.main
    description: cloudwatch logs data send to slack
    environment:
      SLACK_WEBHOOK_URL: "${ssm:/slack/webhook/rawLog}"

  main2:
    handler: handler.main
    description: cloudwatch logs data send to slack
    environment:
      SLACK_WEBHOOK_URL: "${ssm:/slack/webhook/rawLog}"

  appender:
    handler: handler.appender
    description: auto-append loggroup subscription
    events:
      - cloudwatchEvent:
          event:
            source: ["aws.logs"]
            detail-type: ["AWS API Call via CloudTrail"]
            detail:
              eventSource: ["logs.amazonaws.com"]
              eventName: ["CreateLogGroup", "DeleteLogGroup"]

resources:
  Description: Cloudwatch logs data send to slack
  Resources:
    MainLogGroup:
      Properties:
        RetentionInDays: 1
    Main2LogGroup:
      Properties:
        RetentionInDays: 1

    IamRoleLambdaExecution:
      Properties:
        RoleName: "${self:service}"
